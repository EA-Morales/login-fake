{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/snack-bar\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/progress-spinner\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/button\";\n\nfunction LoginComponent_mat_spinner_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\");\n  }\n}\n\nfunction LoginComponent_form_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"form\", 3);\n    i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_form_2_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.Login();\n    });\n    i0.ɵɵelement(1, \"img\", 4);\n    i0.ɵɵelementStart(2, \"h1\");\n    i0.ɵɵtext(3, \"LOGIN\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-form-field\", 5);\n    i0.ɵɵelementStart(5, \"mat-label\");\n    i0.ɵɵtext(6, \"User\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"input\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"mat-form-field\", 7);\n    i0.ɵɵelementStart(9, \"mat-label\");\n    i0.ɵɵtext(10, \"Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"input\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 9);\n    i0.ɵɵtext(13, \"Login\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.form);\n    i0.ɵɵadvance(12);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.form.invalid);\n  }\n}\n\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(fb, _snackBar) {\n      this.fb = fb;\n      this._snackBar = _snackBar;\n      this.loading = false;\n      this.form = this.fb.group({\n        User: ['', Validators.required],\n        Password: ['', Validators.required]\n      });\n    }\n\n    ngOnInit() {}\n\n    Login() {\n      const usuario = this.form.value.User;\n      const password = this.form.value.Password;\n      if (usuario === 'admin' && password === 'pass123') this.loading = true;else {\n        this.error();\n      }\n    }\n\n    error() {\n      this._snackBar.open('Datos incorrectos', '', {\n        duration: 2000,\n        horizontalPosition: 'center',\n        verticalPosition: 'bottom'\n      });\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.MatSnackBar));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 3,\n    vars: 2,\n    consts: [[1, \"contenedor\"], [4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [\"src\", \"./assets/images/user.png\", \"alt\", \"\"], [\"appearance\", \"fill\", 1, \"example-full-width\"], [\"matInput\", \"\", \"placeholder\", \"User\", \"value\", \"\", \"formControlName\", \"User\", \"type\", \"text\"], [\"color\", \"primary\", \"appearance\", \"fill\", 1, \"example-full-width\"], [\"matInput\", \"\", \"placeholder\", \"Password\", \"value\", \"\", \"formControlName\", \"Password\", \"type\", \"password\"], [\"type\", \"submit\", \"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"disabled\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, LoginComponent_mat_spinner_1_Template, 1, 0, \"mat-spinner\", 1);\n        i0.ɵɵtemplate(2, LoginComponent_form_2_Template, 14, 2, \"form\", 2);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loading);\n      }\n    },\n    directives: [i3.NgIf, i4.MatSpinner, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i5.MatFormField, i5.MatLabel, i6.MatInput, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i7.MatButton],\n    styles: [\"form[_ngcontent-%COMP%]{display:flex;flex-direction:column;max-width:300px;justify-content:center;align-items:center;padding:1rem;grid-gap:1rem;gap:1rem;background-color:#ffffff26;-webkit-backdrop-filter:blur(5px);backdrop-filter:blur(5px);box-shadow:inset 0 0 2000px #3f3f3f80}.contenedor[_ngcontent-%COMP%]   *[_ngcontent-%COMP%]{display:flex;flex-direction:column}.contenedor[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{max-width:50%}\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}